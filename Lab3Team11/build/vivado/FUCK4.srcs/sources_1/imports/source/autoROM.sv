/*
    This file was generated automatically by Alchitry Labs 2.0.28-BETA.
    Do not edit this file directly. Instead edit the original Lucid source.
    This is a temporary file and any changes made to it will be destroyed.
*/

module autoROM (
        input wire s0,
        input wire s1,
        input wire s2,
        input wire s3,
        output reg [31:0] out,
        output reg [31:0] a,
        output reg [31:0] b,
        output reg [5:0] alufn
    );
    always @* begin
        
        case ({s3, s2, s1, s0})
            4'h0: begin
                out = 32'h80000000;
                a = 32'h40000000;
                b = 32'h40000000;
                alufn = 6'h0;
            end
            4'h1: begin
                out = 32'h80000000;
                a = 32'h0;
                b = 32'h80000000;
                alufn = 6'h1;
            end
            4'h2: begin
                out = 32'hfffffffa;
                a = 32'hfffffffe;
                b = 32'h3;
                alufn = 6'h2;
            end
            4'h3: begin
                out = 32'hff000;
                a = 32'hffffffff;
                b = 32'hff000;
                alufn = 6'h18;
            end
            4'h4: begin
                out = 32'hffffffff;
                a = 32'hffffffff;
                b = 32'h0;
                alufn = 6'h1e;
            end
            4'h5: begin
                out = 32'hfff00fff;
                a = 32'hffffffff;
                b = 32'hff000;
                alufn = 6'h16;
            end
            4'h6: begin
                out = 32'hf0f0f0f0;
                a = 32'hf0f0f0f0;
                b = 32'hffffffff;
                alufn = 6'h1a;
            end
            4'h7: begin
                out = 32'h1000;
                a = 32'h100;
                b = 32'h4;
                alufn = 6'h20;
            end
            4'h8: begin
                out = 32'h100;
                a = 32'h1000;
                b = 32'h4;
                alufn = 6'h21;
            end
            4'h9: begin
                out = 32'hf8000000;
                a = 32'h80000000;
                b = 32'h4;
                alufn = 6'h23;
            end
            4'ha: begin
                out = 32'h1;
                a = 32'h100000;
                b = 32'h100000;
                alufn = 6'h33;
            end
            4'hb: begin
                out = 32'h0;
                a = 32'h100000;
                b = 32'h100000;
                alufn = 6'h35;
            end
            4'hc: begin
                out = 32'h1;
                a = 32'h100000;
                b = 32'h100000;
                alufn = 6'h37;
            end
            4'hd: begin
                out = 32'h40000;
                a = 32'h100000;
                b = 32'h4;
                alufn = 6'h3;
            end
            4'he: begin
                out = 32'hffefffff;
                a = 32'h100000;
                b = 32'h100000;
                alufn = 6'h1b;
            end
            4'hf: begin
                out = 32'hffefefff;
                a = 32'h111000;
                b = 32'h101000;
                alufn = 6'h1c;
            end
            default: begin
                out = 1'h0;
                a = 1'h0;
                b = 1'h0;
                alufn = 1'h0;
            end
        endcase
    end
    
    
endmodule